# Game Boy (Z80) MCU configuration file
# 16 bit big endian

.MISC
MCU_NAME=game_boy
MCU_DESC=Game Boy (Z80) system
MCU_ENDIAN=BIG
ASM_IMM_PREFIX=#
ASM_IMM_PREFIX_HEX=0x
ASM_IMM_POSTFIX_HEX=
ARCHITECTURE=z80.game_boy

# Code vectoring (interrupt jump locations)
# Start, reset, I/O, etc
.VEC

# LCD Interrupts...are these at the addresses mentioned?
# INT 40 - V-Blank Interrupt
# INT 48 - LCDC Status Interrupt
# INT 50 - Timer Interrupt
# INT 58 - Serial Interrupt
# INT 60 - Joypad Interrupt

# Jump Vectors in First ROM Bank
# The following addresses are supposed to be used as jump vectors:
# 0000,0008,0010,0018,0020,0028,0030,0038 for RST commands
# 0040,0048,0050,0058,0060                for Interrupts

# Note that often this address contains NOP + JMP to real entry point
NAME=START
DESC=Hard power on execution address
OFFSET=0x0100

NAME=RST0
DESC=RST 0
OFFSET=0x0000

NAME=RST1
DESC=RST 1
OFFSET=0x0008

NAME=RST2
DESC=RST 2
OFFSET=0x0010

NAME=RST3
DESC=RST 3
OFFSET=0x0018

NAME=RST4
DESC=RST 4
OFFSET=0x0020

NAME=RST5
DESC=RST 5
OFFSET=0x0028

NAME=RST6
DESC=RST 6
OFFSET=0x0030

NAME=RST7
DESC=RST 7
OFFSET=0x0038

NAME=INT0
DESC=RST 7
OFFSET=0x0040

NAME=INT1
DESC=RST 7
OFFSET=0x0048

NAME=INT2
DESC=RST 7
OFFSET=0x0050

NAME=INT3
DESC=RST 7
OFFSET=0x0058

NAME=INT4
DESC=RST 7
OFFSET=0x0060


# Maybe should have some clock info?
# "4.194304MHz (4.295454MHz for SGB, max. 8.4MHz for CGB)"

# These should represent addressing modes rather than the actual physical locations
# That way, multiple addressing modes can map correctly to the same data
.MEM

# The (virtual?) address space
# "General Memory Map
# 0000-3FFF 16KB ROM Bank 00     (in cartridge, fixed at bank 00)
# 4000-7FFF 16KB ROM Bank 01..NN (in cartridge, switchable bank number)
# 8000-9FFF 8KB Video RAM (VRAM) (switchable bank 0-1 in CGB Mode)
# A000-BFFF 8KB External RAM     (in cartridge, switchable bank, if any)
# C000-CFFF 4KB Work RAM Bank 0 (WRAM)
# D000-DFFF 4KB Work RAM Bank 1 (WRAM) (switchable bank 1-7 in CGB Mode)
# E000-FDFF Same as C000-DDFF (ECHO)    (typically not used)
# FE00-FE9F Sprite Attribute Table (OAM)
# FEA0-FEFF Not Usable
# FF00-FF7F I/O Ports
# FF80-FFFE High RAM (HRAM)
# FFFF      Interrupt Enable Register"
NAME=IRAM
TYPE=RAM
MAX=0xFFFF
ASM_PREFIX=


# "Work RAM: 8K Byte (32K Byte for CGB)"
# TODO: look into mapping
NAME=WRAM
TYPE=RAM
MAX=8192
ASM_PREFIX=


# 0000-3FFF 16KB ROM Bank 00     (in cartridge, fixed at bank 00)
NAME=ROMBANK0
TYPE=RAM
MAX=0x3FFF
ASM_PREFIX=

MAPPING_DST=IRAM
MAPPING_DST_MIN=0x0000
MAPPING_DST_MAX=0x3FFF


# 4000-7FFF 16KB ROM Bank 01..NN (in cartridge, switchable bank number)
NAME=ROMBANK1
TYPE=RAM
MAX=0x3FFF
ASM_PREFIX=

MAPPING_DST=IRAM
MAPPING_DST_MIN=0x4000
MAPPING_DST_MAX=0x7FFF


# "8000-9FFF 8KB Video RAM (VRAM) (switchable bank 0-1 in CGB Mode)"
NAME=VRAM
TYPE=RAM
MAX=0x1FFF
ASM_PREFIX=

MAPPING_DST=IRAM
MAPPING_DST_MIN=0x8000
MAPPING_DST_MAX=0x9FFF


# A000-BFFF 8KB External RAM     (in cartridge, switchable bank, if any)
NAME=ERAM
TYPE=RAM
MAX=0x1FFF
ASM_PREFIX=

MAPPING_DST=IRAM
MAPPING_DST_MIN=0xA000
MAPPING_DST_MAX=0xBFFF


# C000-CFFF 4KB Work RAM Bank 0 (WRAM)
NAME=WRAMBANK0
TYPE=RAM
MAX=0x1FFF
ASM_PREFIX=

MAPPING_DST=IRAM
MAPPING_DST_MIN=0xC000
MAPPING_DST_MAX=0xCFFF


# D000-DFFF 4KB Work RAM Bank 1 (WRAM) (switchable bank 1-7 in CGB Mode)
NAME=WRAMBANK1
TYPE=RAM
MAX=0x1FFF
ASM_PREFIX=

MAPPING_DST=IRAM
MAPPING_DST_MIN=0xD000
MAPPING_DST_MAX=0xDFFF


# E000-FDFF Same as C000-DDFF (ECHO)    (typically not used)
NAME=ECHO
TYPE=RAM
MAX=0x1DFF
ASM_PREFIX=

MAPPING_DST=IRAM
MAPPING_DST_MIN=0xC000
MAPPING_DST_MAX=0xDDFF


# FE00-FE9F Sprite Attribute Table (OAM)
NAME=OAM
DESC=Object Attribute Memory
TYPE=RAM
MAX=0x009F
ASM_PREFIX=

MAPPING_DST=IRAM
MAPPING_DST_MIN=0xFE00
MAPPING_DST_MAX=0xFE9F


# FEA0-FEFF Not Usable
NAME=UHOH
DESC=Reserved
TYPE=RAM
MAX=0x006F
ASM_PREFIX=?

MAPPING_DST=IRAM
MAPPING_DST_MIN=0xFEA0
MAPPING_DST_MAX=0xFEFF


# FF00-FF7F I/O Ports
NAME=VRAM
TYPE=RAM
MAX=0x007F
ASM_PREFIX=

MAPPING_DST=IRAM
MAPPING_DST_MIN=0xFF00
MAPPING_DST_MAX=0xFF7F


# FF80-FFFE High RAM (HRAM)
NAME=HRAM
TYPE=RAM
MAX=0x7E
ASM_PREFIX=

MAPPING_DST=IRAM
MAPPING_DST_MIN=0xFF80
MAPPING_DST_MAX=0xFFFE


# Code ROM
NAME=ROM
TYPE=ROM
MIN=0x0000
# 16 bit addressing, but some cartridges are much bigger
# Uses banking to get around this?
MAX=0xFFFF

.REG

NAME=A
DESC=
SIZE=0x08

NAME=C
DESC=
SIZE=0x08

NAME=AC
DESC=
SIZE=0x10

NAME=B
DESC=
SIZE=0x08

NAME=C
DESC=
SIZE=0x08

NAME=BC
DESC=
SIZE=0x10

NAME=D
DESC=
SIZE=0x08

NAME=E
DESC=
SIZE=0x08

NAME=DE
DESC=
SIZE=0x10

NAME=H
DESC=
SIZE=0x08

NAME=L
DESC=
SIZE=0x08

NAME=HL
DESC=
SIZE=0x10

NAME=PC
DESC=Program Counter
SIZE=0x10

NAME=SP
DESC=Stack Pointer
SIZE=0x10

# FF00 - P1/JOYP - Joypad (R/W)
NAME=P1
DESC=Joypad (R/W)
ADDR=IRAM(0xFF40)
SIZE=0x08

# FF01 - SB - Serial transfer data (R/W)
NAME=SB
DESC=Serial transfer data (R/W)
ADDR=IRAM(0xFF40)
SIZE=0x08

# FF02 - SC - Serial Transfer Control (R/W)
NAME=SC
DESC=Serial Transfer Control (R/W)
ADDR=IRAM(0xFF40)
SIZE=0x08

# FF04 - DIV - Divider Register (R/W)
NAME=DIV
DESC=Divider Register (R/W)
ADDR=IRAM(0xFF40)
SIZE=0x08

# FF05 - TIMA - Timer counter (R/W)
NAME=TIMA
DESC=TIMA - Timer counter (R/W)
ADDR=IRAM(0xFF40)
SIZE=0x08

# FF06 - TMA - Timer Modulo (R/W)
NAME=TMA
DESC=Timer Modulo (R/W)
ADDR=IRAM(0xFF40)
SIZE=0x08

# FF07 - TAC - Timer Control (R/W)
NAME=TAC
DESC=Timer Control (R/W)
ADDR=IRAM(0xFF40)
SIZE=0x08

# FF0F - IF - Interrupt Flag (R/W)
NAME=IF
DESC=Interrupt Flag (R/W)
ADDR=IRAM(0xFF0F)
SIZE=0x08

# FF10 - NR10 - Channel 1 Sweep register (R/W)
NAME=NR10
DESC=Channel 1 Sweep register (R/W)
ADDR=IRAM(0xFF10)
SIZE=0x08

# FF11 - NR11 - Channel 1 Sound length/Wave pattern duty (R/W)
NAME=NR11
DESC=Channel 1 Sound length/Wave pattern duty (R/W)
ADDR=IRAM(0xFF11)
SIZE=0x08

# FF12 - NR12 - Channel 1 Volume Envelope (R/W)
NAME=NR12
DESC=Channel 1 Volume Envelope (R/W)
ADDR=IRAM(0xFF12)
SIZE=0x08

# FF13 - NR13 - Channel 1 Frequency lo (Write Only)
NAME=NR13
DESC=Channel 1 Frequency lo (Write Only)
ADDR=IRAM(0xFF13)
SIZE=0x08

# FF14 - NR14 - Channel 1 Frequency hi (R/W)
NAME=NR14
DESC=Channel 1 Frequency hi (R/W)
ADDR=IRAM(0xFF14)
SIZE=0x08

# FF16 - NR21 - Channel 2 Sound Length/Wave Pattern Duty (R/W)
NAME=NR21
DESC=Channel 2 Sound Length/Wave Pattern Duty (R/W)
ADDR=IRAM(0xFF16)
SIZE=0x08

# FF17 - NR22 - Channel 2 Volume Envelope (R/W)
NAME=NR22
DESC=Channel 2 Volume Envelope (R/W)
ADDR=IRAM(0xFF17)
SIZE=0x08

# FF18 - NR23 - Channel 2 Frequency lo data (W)
NAME=NR23
DESC=Channel 2 Frequency lo data (W)
ADDR=IRAM(0xFF18)
SIZE=0x08

# FF19 - NR24 - Channel 2 Frequency hi data (R/W)
NAME=NR24
DESC=Channel 2 Frequency hi data (R/W)
ADDR=IRAM(0xFF19)
SIZE=0x08

# FF1A - NR30 - Channel 3 Sound on/off (R/W)
NAME=NR30
DESC=Channel 3 Sound on/off (R/W)
ADDR=IRAM(0xFF1A)
SIZE=0x08

# FF1B - NR31 - Channel 3 Sound Length
NAME=NR31
DESC=Channel 3 Sound Length
ADDR=IRAM(0xFF1B)
SIZE=0x08

# FF1C - NR32 - Channel 3 Select output level (R/W)
NAME=NR32
DESC=Channel 3 Select output level (R/W)
ADDR=IRAM(0xFF1C)
SIZE=0x08

# FF1D - NR33 - Channel 3 Frequency's lower data (W)
NAME=NR33
DESC=Channel 3 Frequency's lower data (W)
ADDR=IRAM(0xFF1D)
SIZE=0x08

# FF1E - NR34 - Channel 3 Frequency's higher data (R/W)
NAME=NR34
DESC=Channel 3 Frequency's higher data (R/W)
ADDR=IRAM(0xFF1E)
SIZE=0x08

# FF20 - NR41 - Channel 4 Sound Length (R/W)
NAME=NR41
DESC=Channel 4 Sound Length (R/W)
ADDR=IRAM(0xFF20)
SIZE=0x08

# FF21 - NR42 - Channel 4 Volume Envelope (R/W)
NAME=NR42
DESC=Channel 4 Volume Envelope (R/W)
ADDR=IRAM(0xFF21)
SIZE=0x08

# FF22 - NR43 - Channel 4 Polynomial Counter (R/W)
NAME=NR43
DESC=Channel 4 Polynomial Counter (R/W)
ADDR=IRAM(0xFF22)
SIZE=0x08

# FF23 - NR44 - Channel 4 Counter/consecutive; Inital (R/W)
NAME=NR44
DESC=Channel 4 Counter/consecutive; Inital (R/W)
ADDR=IRAM(0xFF23)
SIZE=0x08

# FF24 - NR50 - Channel control / ON-OFF / Volume (R/W)
NAME=NR50
DESC=Channel control / ON-OFF / Volume (R/W)
ADDR=IRAM(0xFF24)
SIZE=0x08

# FF25 - NR51 - Selection of Sound output terminal (R/W)
NAME=NR51
DESC=Selection of Sound output terminal (R/W)
ADDR=IRAM(0xFF25)
SIZE=0x08

# FF26 - NR52 - Sound on/off
NAME=NR52
DESC=Sound on/off
ADDR=IRAM(0xFF26)
SIZE=0x08

# FF30-FF3F - Wave Pattern RAM
# XXX Maybe instead we should map this to an address space
NAME=WAV0
DESC=Wave Pattern RAM
ADDR=IRAM(0xFF30)
SIZE=0x08

# FF40 - LCDC - LCD Control (R/W)
NAME=LCDC
DESC=LCD Control
ADDR=IRAM(0xFF40)
SIZE=0x08

# FF41 - STAT - LCDC Status (R/W)
NAME=STAT
DESC=LCDC Status
ADDR=IRAM(0xFF41)
SIZE=0x08

# FF42 - SCY - Scroll Y (R/W)
NAME=SCY
DESC=Scrolll Y
ADDR=IRAM(0xFF42)
SIZE=0x08

# FF43 - SCX - Scroll X (R/W)
NAME=SCX
DESC=Scroll X
ADDR=IRAM(0xFF43)
SIZE=0x08

# FF44 - LY - LCDC Y-Coordinate (R)
NAME=LY
DESC=LCDC Y-Coordinate
ADDR=IRAM(0xFF44)
SIZE=0x08

# FF45 - LYC - LY Compare (R/W)
NAME=LYC
DESC=LY Compare
ADDR=IRAM(0xFF45)
SIZE=0x08

# FF46 - DMA - DMA Transfer and Start Address (W)
NAME=DMA
DESC=DMA Transfer and Start Address
ADDR=IRAM(0xFF46)
SIZE=0x08

# FF47 - BGP - BG Palette Data (R/W) - Non CGB Mode Only
NAME=BGP
DESC=BG Palette Data
ADDR=IRAM(0xFF47)
SIZE=0x08

# FF48 - OBP0 - Object Palette 0 Data (R/W) - Non CGB Mode Only
NAME=OBP0
DESC=Object Palette 0 Data
ADDR=IRAM(0xFF48)
SIZE=0x08

# FF49 - OBP1 - Object Palette 1 Data (R/W) - Non CGB Mode Only
NAME=OBP1
DESC=Object Palette 1 Data
ADDR=IRAM(0xFF49)
SIZE=0x08

# FF4A - WY - Window Y Position (R/W)
NAME=WY
DESC=Window Y Position
ADDR=IRAM(0xFF4A)
SIZE=0x08

# FF4B - WX - Window X Position minus 7 (R/W)
NAME=WX
DESC=Window X Position minus 7
ADDR=IRAM(0xFF4B)
SIZE=0x08

# FF4D - KEY1 - CGB Mode Only - Prepare Speed Switch

# FF4F - VBK - CGB Mode Only - VRAM Bank
NAME=VBK
DESC=CGB Mode Only - VRAM Bank
ADDR=IRAM(0xFF4F)
SIZE=0x08

# LCD VRAM DMA Transfers (CGB only)

# FF51 - HDMA1 - CGB Mode Only - New DMA Source, High
NAME=HDMA1
DESC=CGB Mode Only - New DMA Source, High
ADDR=IRAM(0xFF51)
SIZE=0x08

# FF52 - HDMA2 - CGB Mode Only - New DMA Source, Low
NAME=HDMA2
DESC=CGB Mode Only - New DMA Source, Low
ADDR=IRAM(0xFF52)
SIZE=0x08

# FF53 - HDMA3 - CGB Mode Only - New DMA Destination, High
NAME=HDMA3
DESC=CGB Mode Only - New DMA Destination, High
ADDR=IRAM(0xFF53)
SIZE=0x08

# FF54 - HDMA4 - CGB Mode Only - New DMA Destination, Low
NAME=HDMA4
DESC=CGB Mode Only - New DMA Destination, Low
ADDR=IRAM(0xFF54)
SIZE=0x08

# FF55 - HDMA5 - CGB Mode Only - New DMA Length/Mode/Start
NAME=HDMA5
DESC=CGB Mode Only - New DMA Length/Mode/Start
ADDR=IRAM(0xFF55)
SIZE=0x08

# FF56 - RP - CGB Mode Only - Infrared Communications Port

# FF68 - BCPS/BGPI - CGB Mode Only - Background Palette Index
# XXX: why are two names given above?
NAME=BCPS
DESC=CGB Mode Only - Background Palette Index
ADDR=IRAM(0xFF68)
SIZE=0x08

# FF69 - BCPD/BGPD - CGB Mode Only - Background Palette Data
NAME=BCPD
DESC=Window X Position minus 7
ADDR=IRAM(0xFF69)
SIZE=0x08

# FF6A - OCPS/OBPI - CGB Mode Only - Sprite Palette Index
NAME=OCPS
DESC=Window X Position minus 7
ADDR=IRAM(0xFF6A)
SIZE=0x08

# FF6B - OCPD/OBPD - CGB Mode Only - Sprite Palette Data
NAME=OCPD
DESC=Window X Position minus 7
ADDR=IRAM(0xFF6B)
SIZE=0x08

# FF70 - SVBK - CGB Mode Only - WRAM Bank
NAME=CGB Mode Only - WRAM Bank
DESC=Interrupt Enable
ADDR=IRAM(0xFF70)
SIZE=0x08

# FF6C - Undocumented (FEh) - Bit 0 (Read/Write) - CGB Mode Only
# FF72 - Undocumented (00h) - Bit 0-7 (Read/Write)
# FF73 - Undocumented (00h) - Bit 0-7 (Read/Write)
# FF74 - Undocumented (00h) - Bit 0-7 (Read/Write) - CGB Mode Only
# FF75 - Undocumented (8Fh) - Bit 4-6 (Read/Write)
# FF76 - Undocumented (00h) - Always 00h (Read Only)
# FF77 - Undocumented (00h) - Always 00h (Read Only)

# FFFF      Interrupt Enable Register"
NAME=IE
DESC=Interrupt Enable
ADDR=IRAM(0xFFFF)
SIZE=0x08




# Instruction prefixes
# Should get moved into opcodes
.PRE
# Z80 does not support this



# Opcodes
# http://nocash.emubase.de/pandocs.htm# some from 
# http://anthony.bentley.name/rgbds/manual/gbz80/
# http://www.pastraiser.com/cpu/gameboy/gameboy_opcodes.html
# "The Game Boy CPU, commonly called the “gbz80,” is a derivative of the 8080 processor.
# Sharp manufactures it as the LR35902. Assemblers tend to use Z80 syntax, but it is not identical to the z80
# for instance, it lacks IX and IY registers. This manual describes the opcodes of this processor."
.OP

# Moved, Removed, and Added Opcodes
# Opcode Z80              GMB
# ---------------------------------------
# 08      EX   AF,AF      LD   (nn),SP
# 10      DJNZ PC+dd      STOP
# 22      LD   (nn),HL    LDI (HL),A
# 2A      LD   HL,(nn)    LDI A,(HL)
# 32      LD   (nn),A     LDD (HL),A
# 3A      LD   A,(nn)     LDD A,(HL)
# D3      OUT (n),A       -
# D9      EXX             RETI
# DB      IN   A,(n)      -
# DD      <IX>            -
# E0      RET PO          LD   (FF00+n),A

NAME=NOP
DESC=nop
USAGE=0x00
SYNTAX=
ACTION=nop

NAME=LD
DESC=nop
USAGE=0x01,u16_0
SYNTAX=BC,u16_0
ACTION=nop

NAME=LD
DESC=nop
USAGE=0x02
SYNTAX=BC,A
ACTION=nop

NAME=INC
DESC=nop
USAGE=0x03
SYNTAX=BC
ACTION=nop

NAME=INC
DESC=nop
USAGE=0x04
SYNTAX=B
ACTION=nop

NAME=DEC
DESC=nop
USAGE=0x05
SYNTAX=B
ACTION=nop

NAME=LD
DESC=nop
USAGE=0x06,u8_0
SYNTAX=B,u8_0
ACTION=nop

NAME=RLCA
DESC=nop
USAGE=0x07
SYNTAX=
ACTION=nop

NAME=LD
DESC=nop
USAGE=0x08,u16_0
SYNTAX=u16_0,SP
ACTION=GOTO(IRAM(u16_0))

NAME=ADD
DESC=nop
USAGE=0x09
SYNTAX=HL,BC
ACTION=nop

NAME=LD
DESC=nop
USAGE=0x0A
SYNTAX=A,BC
ACTION=nop

NAME=DEC
DESC=nop
USAGE=0x0B
SYNTAX=BC
ACTION=nop

NAME=INC
DESC=nop
USAGE=0x0C
SYNTAX=C
ACTION=nop

NAME=DEC
DESC=nop
USAGE=0x0D
SYNTAX=C
ACTION=nop

NAME=LD
DESC=nop
USAGE=0x0E,u8_0
SYNTAX=C,u8_0
ACTION=nop

NAME=RRCA
DESC=nop
USAGE=0x0F
SYNTAX=
ACTION=nop

# NOTE: apparantly some assemblers don't include the 0x00
# Since 0x00 is NOP, going to leave it out
NAME=STOP
DESC=nop
USAGE=0x10
SYNTAX=
ACTION=nop

NAME=LD
DESC=nop
USAGE=0x11,u16_0
SYNTAX=DE,u16_0
ACTION=nop

NAME=LD
DESC=nop
USAGE=0x12
SYNTAX=DE,A
ACTION=nop

NAME=INC
DESC=nop
USAGE=0x13
SYNTAX=DE
ACTION=nop

NAME=INC
DESC=nop
USAGE=0x14
SYNTAX=D
ACTION=nop

NAME=DEC
DESC=nop
USAGE=0x15
SYNTAX=D
ACTION=nop

NAME=LD
DESC=nop
USAGE=0x16,u8_0
SYNTAX=D,u8_0
ACTION=nop

NAME=RLA
DESC=nop
USAGE=0x17
SYNTAX=
ACTION=nop

NAME=JR
DESC=nop
USAGE=0x18,s8_0
SYNTAX=
ACTION=GOTO(%PC+s8_0)

NAME=ADD
DESC=nop
USAGE=0x19
SYNTAX=HL,DE
ACTION=nop

NAME=LD
DESC=nop
USAGE=0x1A
SYNTAX=A,DE
ACTION=nop

NAME=DEC
DESC=nop
USAGE=0x1B
SYNTAX=DE
ACTION=nop

NAME=INC
DESC=nop
USAGE=0x1C
SYNTAX=E
ACTION=nop

NAME=DEC
DESC=nop
USAGE=0x1D
SYNTAX=E
ACTION=nop

NAME=LD
DESC=nop
USAGE=0x1E,u8_0
SYNTAX=E,u8_0
ACTION=nop

NAME=RRA
DESC=nop
USAGE=0x1F
SYNTAX=
ACTION=nop

NAME=JR
DESC=nop
USAGE=0x20,s8_0
SYNTAX=NZ,s8_0
ACTION=GOTO(%PC+s8_0)

NAME=LD
DESC=nop
USAGE=0x21,u16_0
SYNTAX=HL,u16_0
ACTION=nop

NAME=LD
DESC=nop
USAGE=0x22
SYNTAX=HL,A
ACTION=nop

NAME=INC
DESC=nop
USAGE=0x23
SYNTAX=HL
ACTION=nop

NAME=INC
DESC=nop
USAGE=0x24
SYNTAX=H
ACTION=nop

NAME=DEC
DESC=nop
USAGE=0x25
SYNTAX=H
ACTION=nop

NAME=LD
DESC=nop
USAGE=0x26,u8_0
SYNTAX=H,u8_0
ACTION=nop

NAME=DAA
DESC=nop
USAGE=0x27
SYNTAX=
ACTION=nop

NAME=JR
DESC=nop
USAGE=0x28,s8_0
SYNTAX=Z,s8_0
ACTION=GOTO(%PC+s8_0)

NAME=ADD
DESC=nop
USAGE=0x29
SYNTAX=HL,HL
ACTION=nop

NAME=LD
DESC=nop
USAGE=0x2A
SYNTAX=A,HL
ACTION=nop

NAME=DEC
DESC=nop
USAGE=0x2B
SYNTAX=HL
ACTION=nop

NAME=INC
DESC=nop
USAGE=0x2C
SYNTAX=L
ACTION=nop

NAME=DEC
DESC=nop
USAGE=0x2D
SYNTAX=L
ACTION=nop

NAME=LD
DESC=nop
USAGE=0x2E,u8_0
SYNTAX=L,u8_0
ACTION=nop

NAME=CPL
DESC=nop
USAGE=0x2F
SYNTAX=
ACTION=nop

NAME=JR
DESC=nop
USAGE=0x30,s8_0
SYNTAX=NC,s8_0
ACTION=GOTO(%PC+s8_0)

NAME=LD
DESC=nop
USAGE=0x31,u16_0
SYNTAX=SP,u16_0
ACTION=nop

NAME=LD
DESC=nop
USAGE=0x32
SYNTAX=HL,A
ACTION=nop

NAME=INC
DESC=nop
USAGE=0x33
SYNTAX=SP
ACTION=nop

NAME=INC
DESC=nop
USAGE=0x34
SYNTAX=HL
ACTION=nop

NAME=DEC
DESC=nop
USAGE=0x35
SYNTAX=HL
ACTION=nop

NAME=LD
DESC=nop
USAGE=0x36,u8_0
SYNTAX=HL,u8_0
ACTION=nop

NAME=SCF
DESC=nop
USAGE=0x37
SYNTAX=
ACTION=nop

NAME=JR
DESC=nop
USAGE=0x38,s8_0
SYNTAX=C,s8_0
ACTION=GOTO(%PC+s8_0)

NAME=ADD
DESC=nop
USAGE=0x39
SYNTAX=HL,SP
ACTION=nop

NAME=LD
DESC=nop
USAGE=0x3A
SYNTAX=A,HL
ACTION=nop

NAME=DEC
DESC=nop
USAGE=0x3B
SYNTAX=SP
ACTION=nop

NAME=INC
DESC=nop
USAGE=0x3C
SYNTAX=A
ACTION=nop

NAME=DEC
DESC=nop
USAGE=0x3D
SYNTAX=A
ACTION=nop

NAME=LD
DESC=nop
USAGE=0x3E,u8_0
SYNTAX=A,u8_0
ACTION=nop

NAME=CCF
DESC=nop
USAGE=0x3F
SYNTAX=
ACTION=nop

NAME=LD
DESC=load something
USAGE=0x40+0x3F
SYNTAX=
ACTION=nop

# NAME=HALT
# DESC=halt the processor until interrupt
# USAGE=0x76
# SYNTAX=
# ACTION=nop

NAME=MATH
DESC=techincal stuff
USAGE=0xA0+0x3F
SYNTAX=
ACTION=nop

NAME=RET
DESC=nop
USAGE=0xC0
SYNTAX=NZ
ACTION=RETURN()

NAME=POP
DESC=nop
USAGE=0xC1
SYNTAX=BC
ACTION=nop

NAME=JP
DESC=nop
USAGE=0xC2,u16_0
SYNTAX=NZ,u16_0
ACTION=GOTO(u16_0)

NAME=JP
DESC=nop
USAGE=0xC3,u16_0
SYNTAX=u16_0
ACTION=GOTO(u16_0)

NAME=CALL
DESC=nop
USAGE=0xC4,u16_0
SYNTAX=NZ,u16_0
ACTION=CALL(u16_0)

NAME=PUSH
DESC=nop
USAGE=0xC5
SYNTAX=BC
ACTION=nop

NAME=ADD
DESC=nop
USAGE=0xC6,u8_0
SYNTAX=A,u8_0
ACTION=nop

NAME=RST
DESC=nop
USAGE=0xC7
SYNTAX=
ACTION=GOTO(0x0000)

NAME=RET
DESC=nop
USAGE=0xC8
SYNTAX=Z
ACTION=CRETURN()

NAME=RET
DESC=nop
USAGE=0xC9
SYNTAX=
ACTION=RETURN()

NAME=JP
DESC=nop
USAGE=0xCA,u16_0
SYNTAX=Z,u16_0
ACTION=GOTO(u16_0)

NAME=PREFIX
DESC=Escape sequence
USAGE=0xCB,u8_0
SYNTAX=u8_0
ACTION=nop

NAME=CALL
DESC=nop
USAGE=0xCC,u16_0
SYNTAX=Z,u16_0
ACTION=CCALL(u16_0)

NAME=CALL
DESC=nop
USAGE=0xCD,u16_0
SYNTAX=u16_0
ACTION=CALL(u16_0)

NAME=ADC
DESC=nop
USAGE=0xCE,u8_0
SYNTAX=A,u8_0
ACTION=nop

NAME=RST
DESC=nop
USAGE=0xCF
SYNTAX=0x0008
ACTION=GOTO(0x0008)

NAME=RET
DESC=nop
USAGE=0xD0
SYNTAX=NC
ACTION=CRETURN()

NAME=POP
DESC=nop
USAGE=0xD1
SYNTAX=DE
ACTION=nop

NAME=JP
DESC=nop
USAGE=0xD2,u16_0
SYNTAX=NC,u16_0
ACTION=GOTO(u16_0)

NAME=OHNOES
DESC=undefined
USAGE=0xD3
SYNTAX=
ACTION=nop

NAME=CALL
DESC=nop
USAGE=0xD4,u16_0
SYNTAX=NC,u16_0
ACTION=CCALL(u16_0)

NAME=PUSH
DESC=nop
USAGE=0xD5
SYNTAX=DE
ACTION=nop

NAME=SUB
DESC=nop
USAGE=0xD6,s8_0
SYNTAX=s8_0
ACTION=nop

NAME=RST
DESC=nop
USAGE=0xD7
SYNTAX=0x10
ACTION=GOTO(0x10)

NAME=RET
DESC=nop
USAGE=0xD8
SYNTAX=C
ACTION=CRETURN()

NAME=RETI
DESC=nop
USAGE=0xD9
SYNTAX=
ACTION=RETURN()

NAME=JP
DESC=nop
USAGE=0xDA,u16_0
SYNTAX=u16_0
ACTION=GOTO(u16_0)

NAME=OHNOES
DESC=undefined
USAGE=0xDB
SYNTAX=
ACTION=nop

NAME=CALL
DESC=nop
USAGE=0xDC,u16_0
SYNTAX=C,u16_0
ACTION=CCALL(u16_0)

NAME=OHNOES
DESC=nop
USAGE=0xDD
SYNTAX=
ACTION=nop

NAME=SBC
DESC=nop
USAGE=0xDE,s8_0
SYNTAX=A,s8_0
ACTION=nop

NAME=RST
DESC=nop
USAGE=0xDF
SYNTAX=0x18
ACTION=GOTO(0x18)

NAME=LDH
DESC=nop
USAGE=0xE0,s8_0
SYNTAX=s8_0,A
ACTION=nop

NAME=POP
DESC=nop
USAGE=0xE1
SYNTAX=HL
ACTION=nop

# XXX: why is this two bytes?
# assume was mistake until I find out otherwise
NAME=LD
DESC=nop
USAGE=0xE2
SYNTAX=C,A
ACTION=nop

NAME=OHNOES
DESC=nop
USAGE=0xE3
SYNTAX=
ACTION=nop

NAME=OHNOES
DESC=nop
USAGE=0xE4
SYNTAX=
ACTION=nop

NAME=PUSH
DESC=nop
USAGE=0xE5
SYNTAX=HL
ACTION=nop

NAME=AND
DESC=nop
USAGE=0xE6,u8_0
SYNTAX=u8_0
ACTION=nop

NAME=RST
DESC=nop
USAGE=0xE7
SYNTAX=0x20
ACTION=GOTO(0x20)

NAME=ADD
DESC=nop
USAGE=0xE8,s8_0
SYNTAX=SP,s8_0
ACTION=nop

# FIXME: unsupported jump type
NAME=JP
DESC=nop
USAGE=0xE9
SYNTAX=HL
ACTION=nop

NAME=LD
DESC=nop
USAGE=0xEA,u16_0
SYNTAX=u16_0,A
ACTION=nop

NAME=OHNOES
DESC=nop
USAGE=0xEB
SYNTAX=
ACTION=nop

NAME=OHNOES
DESC=nop
USAGE=0xEC
SYNTAX=
ACTION=nop

NAME=OHNOES
DESC=nop
USAGE=0xED
SYNTAX=
ACTION=nop

NAME=XOR
DESC=nop
USAGE=0xEE,s8_0
SYNTAX=s8_0
ACTION=nop

NAME=RST
DESC=nop
USAGE=0xEF
SYNTAX=0x28
ACTION=GOTO(0x28)

NAME=LDH
DESC=nop
USAGE=0xF0,s8_0
SYNTAX=A,s8_0
ACTION=nop

NAME=POP
DESC=nop
USAGE=0xF1
SYNTAX=AF
ACTION=nop

# XXX: see 0xE2
NAME=LD
DESC=nop
USAGE=0xF2
SYNTAX=C,A
ACTION=nop

NAME=DI
DESC=nop
USAGE=0xF3
SYNTAX=
ACTION=nop

NAME=OHNOES
DESC=nop
USAGE=0xF4
SYNTAX=
ACTION=nop

NAME=PUSH
DESC=nop
USAGE=0xF5
SYNTAX=AF
ACTION=nop

NAME=OR
DESC=nop
USAGE=0xF6,u8_0
SYNTAX=u8_0
ACTION=nop

NAME=RST
DESC=nop
USAGE=0xF7
SYNTAX=0x30
ACTION=GOTO(0x30)

NAME=LD
DESC=nop
USAGE=0xF8,s8_0
SYNTAX=HL,SP,s8_0
ACTION=nop

NAME=LD
DESC=nop
USAGE=0xF9
SYNTAX=SP,HL
ACTION=nop

NAME=LD
DESC=nop
USAGE=0xFA,u16_0
SYNTAX=A,u16_0
ACTION=nop

NAME=EI
DESC=nop
USAGE=0xFB
SYNTAX=
ACTION=nop

NAME=OHNOES
DESC=nop
USAGE=0xFC
SYNTAX=
ACTION=nop

NAME=OHNOES
DESC=nop
USAGE=0xFD
SYNTAX=
ACTION=nop

NAME=CP
DESC=nop
USAGE=0xFE,s8_0
SYNTAX=s8_0
ACTION=nop

NAME=RST
DESC=nop
USAGE=0xFF
SYNTAX=0x38
ACTION=GOTO(0x38)

