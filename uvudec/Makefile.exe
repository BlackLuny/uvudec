# UVNet Universal Decompiler (uvudec)
# Copyright 2008 John McMaster <JohnDMcMaster@gmail.com>
# Licensed under terms of the three clause BSD license, see LICENSE for details

ifeq ($(EXE_BUILD_SUFFIX),Y)
ifeq ($(LINKAGE),static)
EXE_NAME_FULL=$(EXE_NAME).static
else
EXE_NAME_FULL=$(EXE_NAME).dynamic
endif
else
EXE_NAME_FULL=$(EXE_NAME)
endif

$(EXE_NAME_FULL): depend $(OBJS)
	mkdir -p $(BIN_DIR)
	$(CXX) $(LDFLAGS) $(OBJS) $(LIBS) $(LIBS) -o $(EXE_NAME_FULL)
ifeq ($(USING_UPX),Y)
	$(UPX) $(UVUDEC_EXE)
endif

ALL_TARGETS=$(EXE_NAME_FULL)

ifeq ($(LINKAGE),static)

LIB_C_STATIC=$(shell $(CXX) -print-file-name=libc.a)
LIB_STDCXX_STATIC=$(shell $(CXX) -print-file-name=libstdc++.a)
LIB_M_STATIC=$(shell $(CXX) -print-file-name=libm.a)
LIBS += $(LIB_M_STATIC) $(LIB_STDCXX_STATIC) $(LIB_C_STATIC)

LDFLAGS += -static -static-libgcc -Wl,'-z nodefaultlib'

else

LIBS +=
# Setting the library runtime path to a way I want is tricky
# People need to be able to install it, but I also want dynamic deployment
# http://xahlee.org/UnixResource_dir/_/ldpath.html provides some good ideas on how to deal with this with LD_LIBRARY_PATH
# I never thought about shipping as .o files, although I'm not sure if its a good idea or not..sounds painful
# Wrapper scripts are probably my favorite

# Hmm I guess it fixes up the correct paths automagically for us?
# these paths are relative to the other dir
# FIXME
# ick well they are at the same level, so it just happens to work out
# LDFLAGS += -Wl,-rpath,$(LIB_DIR) -Wl,-rpath,$(PLUGIN_LIB_DIR)
#LDFLAGS += -Wl,-rpath,../lib -Wl,-rpath,../lib/plugin

endif

# Need to make macro for this
ifeq ($(USING_LIB_UVUDEC),Y)
ifeq ($(LINKAGE),static)
LIBS += $(LIB_UVUDEC_STATIC)
else
LIBS += -l$(LIB_UVUDEC_DYNAMIC_USED)
endif
endif

INFO_TARGETS=infoExe
infoExe:
	@(echo "Exe info")
	@(echo "EXE_NAME_FULL: $(EXE_NAME_FULL)")
	@(echo "")

