# Makefile for setting project stuff
# Basically so I can set defaults in my main file and still be sane not having
# to ./configure for every small change I make

MAKEDEPEND=
CC = gcc
CXX = g++
CP = cp
RM = rm -f
INSTALL = install
GZIP = gzip
TAR = tar
MKDIR = mkdir
PERL = perl
UPX = upx

# Fully static build?
USING_STATIC=Y
USING_DYNAMIC=N
# Reccomend to set to Y is using both static and dynamic, otherwise they will overwrite each other
EXE_BUILD_SUFFIX=N

USING_ROPE=N

PREFIX=
INSTALL_DIR_BASE=$(PREFIX)/opt/uvudec
# Instead of using the INSTALL_DIR_BASE, find the location of the executed program and use ../arch, ../sig and such
# Allows easy deployment of compiled application and then simply sym linked to
# Must preserve the same dir struct though that a /opt style installation would have provided
INSTALLED_FILES_RELATIVE=N

#Scripting support
ifeq ($(shell which python |fgrep '/'),)
USING_PYTHON=N
else
USING_PYTHON=Y
endif
USING_LUA=N
USING_SPIDERAPE=N
SPIDERAPE_DIR=

# UPX packer
# Allows for making exes smaller
ifeq ($(shell which upx |fgrep '/'),)
USING_UPX=N
else
USING_UPX=Y
endif

# File to work on if no arguments are given
# Default is no default
DEFAULT_DECOMPILE_FILE='""'
# TODO: make relative path here is to the installed exe location
# INSTALL_DIR will get resolved later
DEFAULT_CPU_DIR='"$(INSTALL_DIR)/arch"'
DEFAULT_CPU_FILE=$(DEFAULT_CPU_DIR)'"/8051/8051.op"'

USING_UVUDEC=Y
USING_AR2PAT=Y
USING_COFF2PAT=Y
USING_OMF2PAT=Y
USING_ELF2PAT=Y
USING_PAT2SIG=Y
